{"version":3,"sources":["My Components/Calculator/Buttonpad.js","My Components/Calculator/Screen.js","My Components/Calculator/Header.js","My Components/Calculator/Calculator.js","My Components/Calculator/App.js","index.js"],"names":["Buttonpad","props","useState","text","setText","handleMouseUpEvent","e","handleMouseEvent","buttons","document","getElementById","childNodes","buttonText","screen","item","addEventListener","target","innerText","setTextState","eval","console","log","StateUpdate","colorChange","color","style","background","buttonPad","bgColor","i","length","buttonColor","fontColor","boxShadow","buttonShadow","transition","backgroundColor","resetButton","equalButton","useEffect","theme","window","removeEventListener","id","className","Screen","font","transitionProperty","autoComplete","value","onChange","stateShow","Header","handleCheck","bind","mouseover","this","inputElement","getElementsByClassName","toggleButton","bgFont","themeBoxColor","defaultChecked","type","onClick","React","Component","colorThemes","blue","white","purple","Calculator","state","colorState","colorStateChange","Stateshow","setState","body","colorObj","prevValue","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.c0520128.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Buttonpad.css\";\r\n\r\nfunction Buttonpad(props) {\r\n  const [text, setText] = useState(\"\");\r\n  useEffect(() => {\r\n    colorChange(props.theme);\r\n    window.addEventListener(\"mousedown\", handleMouseEvent);\r\n    window.addEventListener(\"mouseup\", handleMouseUpEvent);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"mousedown\", handleMouseEvent);\r\n      window.removeEventListener(\"mouseup\", handleMouseUpEvent);\r\n    };\r\n  });\r\n\r\n  function handleMouseUpEvent(e) {\r\n    // document.getElementById(e.target.id).classList.remove(\"active\");\r\n  }\r\n\r\n  function handleMouseEvent(e) {\r\n    var buttons = document.getElementById(\"button-container\").childNodes;\r\n    var buttonText = \"\";\r\n    var screen = text;\r\n    for (let item of buttons) {\r\n      item.addEventListener(\"click\", (e) => {\r\n        buttonText = e.target.innerText;\r\n        if (buttonText === \"x\") {\r\n          buttonText = \"*\";\r\n          screen += buttonText;\r\n          setTextState(screen);\r\n        } else if (buttonText === \"=\") {\r\n          screen = eval(screen);\r\n          setTextState(screen);\r\n        } else if (buttonText === \"RESET\") {\r\n          screen = \"\";\r\n          setTextState(screen);\r\n        } else if (buttonText == \"DEL\") {\r\n          screen -= screen;\r\n        } else {\r\n          screen += buttonText;\r\n          setTextState(screen);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  function setTextState(e) {\r\n    console.log(e);\r\n    setText(e);\r\n    props.StateUpdate(e);\r\n  }\r\n\r\n  function colorChange(color) {\r\n    // console.log(document.getElementById(\"button-container\").childNodes);\r\n    document.getElementById(\"button-container\").style.background =\r\n      color.buttonPad.bgColor;\r\n    var buttons = document.getElementById(\"button-container\").childNodes;\r\n    for (let i = 0; i < buttons.length; i++) {\r\n      buttons[i].style.background = color.buttonPad.buttonColor;\r\n      buttons[i].style.color = color.buttonPad.fontColor;\r\n      buttons[\r\n        i\r\n      ].style.boxShadow = `0px 3px 1px ${color.buttonPad.buttonShadow}`;\r\n      buttons[i].style.transition = \"background 0.5s\";\r\n    }\r\n    document.getElementById(\"clear\").style.backgroundColor =\r\n      color.resetButton.bgColor;\r\n    document.getElementById(\"clear\").style.color = color.resetButton.fontColor;\r\n    document.getElementById(\r\n      \"clear\"\r\n    ).style.boxShadow = `0px 3px 1px ${color.resetButton.boxShadow}`;\r\n    document.getElementById(\"clear\").style.transition = \"background 0.5s\";\r\n    document.getElementById(\"del\").style.backgroundColor =\r\n      color.resetButton.bgColor;\r\n    document.getElementById(\"del\").style.color = color.resetButton.fontColor;\r\n    document.getElementById(\r\n      \"del\"\r\n    ).style.boxShadow = `0px 3px 1px ${color.resetButton.boxShadow}`;\r\n    document.getElementById(\"del\").style.transition = \"background 0.5s\";\r\n    document.getElementById(\"equal\").style.backgroundColor =\r\n      color.equalButton.bgColor;\r\n    document.getElementById(\"equal\").style.color = color.equalButton.fontColor;\r\n    document.getElementById(\r\n      \"equal\"\r\n    ).style.boxShadow = `0px 3px 1px ${color.equalButton.boxShadow}`;\r\n    document.getElementById(\"equal\").style.transition = \"background 0.5s\";\r\n  }\r\n  return (\r\n    // <div id=\"button-outer\">\r\n    <div id=\"button-container\">\r\n      <div id=\"seven\" className=\"buttons\">\r\n        <span>7</span>\r\n      </div>\r\n      <div id=\"eight\" className=\"buttons\">\r\n        <span>8</span>\r\n      </div>\r\n      <div id=\"nine\" className=\"buttons\">\r\n        <span>9</span>\r\n      </div>\r\n      <div className=\"buttons\" id=\"del\" /* onClick={deletebutton} */>\r\n        <span>DEL</span>\r\n      </div>\r\n      <div id=\"four\" className=\"buttons\">\r\n        <span>4</span>\r\n      </div>\r\n      <div id=\"five\" className=\"buttons\">\r\n        <span>5</span>\r\n      </div>\r\n      <div id=\"six\" className=\"buttons\">\r\n        <span>6</span>\r\n      </div>\r\n      <div className=\"buttons\" id=\"add\">\r\n        <span>+</span>\r\n      </div>\r\n      <div id=\"one\" className=\"buttons\">\r\n        <span>1</span>\r\n      </div>\r\n      <div id=\"two\" className=\"buttons\">\r\n        <span>2</span>\r\n      </div>\r\n      <div id=\"three\" className=\"buttons\">\r\n        <span>3</span>\r\n      </div>\r\n      <div className=\"buttons\" id=\"subtract\">\r\n        <span>-</span>\r\n      </div>\r\n      <div className=\"buttons\" id=\"decimal\">\r\n        <span>.</span>\r\n      </div>\r\n      <div id=\"zero\" className=\"buttons\">\r\n        <span>0</span>\r\n      </div>\r\n      <div className=\"buttons\" id=\"divide\">\r\n        <span>/</span>\r\n      </div>\r\n      <div className=\"buttons\" id=\"multiply\">\r\n        <span>x</span>\r\n      </div>\r\n      <div className=\"buttons\" id=\"clear\">\r\n        <span>RESET</span>\r\n      </div>\r\n      <div className=\"buttons\" id=\"equal\">\r\n        <span>=</span>\r\n      </div>\r\n    </div>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default Buttonpad;\r\n","import React, { useEffect } from \"react\";\r\nimport \"./Screen.css\";\r\n\r\nexport default function Screen(props) {\r\n  /* function handleChange() {\r\n    document.getElementById(\"screen\").style.backgroundColor =\r\n      props.theme.background.bgColor;\r\n  } */\r\n  useEffect(() => {\r\n    colorChange(props.theme);\r\n  });\r\n\r\n  function colorChange(color) {\r\n    document.getElementById(\"display\").style.color = color.screen.font;\r\n    document.getElementById(\"display\").style.backgroundColor =\r\n      color.screen.bgColor;\r\n    document.getElementById(\"display\").style.transitionProperty =\r\n      \"background 0.5s\";\r\n  }\r\n\r\n  function handleChange(e) {\r\n    props.stateShow(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        // type=\"number\"\r\n        autoComplete=\"false\"\r\n        id=\"display\"\r\n        value={props.value}\r\n        onChange={handleChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n// import { Component } from \"react\";\r\nimport \"./Header.css\";\r\n// import { colorThemes } from \"./Calculator\";\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleCheck = this.handleCheck.bind(this);\r\n    this.colorChange = this.colorChange.bind(this);\r\n    this.mouseover = this.mouseover.bind(this);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.colorChange(this.props.theme);\r\n    document.addEventListener('onmouseover',this.mouseover);\r\n  }\r\n\r\n  mouseover(e){\r\n    console.log(e.target.id);\r\n  }\r\n\r\n  colorChange(color) {\r\n    var inputElement =\r\n      document.getElementsByClassName(\"input-list\")[0].childNodes;\r\n    /* for (let i = 0; i < inputElement.length; i++) {\r\n      inputElement[i].style.background = color.toggleButton;\r\n    } */\r\n    document.addEventListener(\"click\", (e) => {\r\n      for (let i = 0; i < inputElement.length; i++) {\r\n        if (e.target.id == inputElement[i].id) {\r\n          inputElement[i].style.background = color.toggleButton;\r\n          inputElement[i].style.transition = \"background 0.6s ease-in\";\r\n          // inputElement[i].style.marginLeft = \"25px\";\r\n        } else {\r\n          inputElement[i].style.background = \"none\";\r\n          inputElement[i].style.transition = \"background 0.6s ease-out\";\r\n          // inputElement[i].style.marginLeft = \"-25px\";\r\n        }\r\n      }\r\n    });\r\n    document.getElementById(\"outer\").style.background =\r\n      color.background.bgColor;\r\n    document.getElementById(\"outer\").style.color = color.background.bgFont;\r\n    document.getElementsByClassName(\"input-list\")[0].style.background =\r\n      color.themeBoxColor;\r\n    document.getElementById(\"outer\").style.transition = \"background 0.5s\";\r\n    document.getElementsByClassName(\"input-list\")[0].style.transition =\r\n      \"background 0.5s\";\r\n  }\r\n\r\n  handleCheck(e) {\r\n    console.log(this.props.theme);\r\n    this.props.handleCheck(e);\r\n    console.log(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"outer\">\r\n        <div id=\"calc\">\r\n          <span>calc</span>\r\n        </div>\r\n        <div id=\"theme-box\">\r\n          <div id=\"number\">\r\n            <div className=\"empty\"></div>\r\n            <div id=\"number-list\">\r\n              <div>1</div>\r\n              <div>2</div>\r\n              <div>3</div>\r\n            </div>\r\n          </div>\r\n          <div id=\"number\" className=\"upside\">\r\n            <div className=\"empty margin-left\">\r\n              <span>THEME</span>\r\n            </div>\r\n            <div className=\"input-list\">\r\n              <input\r\n                id=\"blue\"\r\n                defaultChecked\r\n                type=\"checkbox\"\r\n                onClick={() => {\r\n                  this.handleCheck(\"blue\");\r\n                }}\r\n              ></input>\r\n              <input\r\n                type=\"checkbox\"\r\n                id=\"white\"\r\n                onClick={() => {\r\n                  this.handleCheck(\"white\");\r\n                }}\r\n              ></input>\r\n              <input\r\n                id=\"purple\"\r\n                type=\"checkbox\"\r\n                onClick={() => {\r\n                  this.handleCheck(\"purple\");\r\n                }}\r\n              ></input>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Calculator.css\";\r\nimport Screen from \"./Screen\";\r\nimport Buttonpad from \"./Buttonpad\";\r\nimport Header from \"./Header\";\r\n\r\nexport const colorThemes = {\r\n  blue: {\r\n    background: { bgColor: \"#3b4664\", bgFont: \"white\" },\r\n    buttonPad: {\r\n      bgColor: \"#252d44\",\r\n      buttonColor: \"#eae3db\",\r\n      buttonShadow: \"#aea4a2\",\r\n      fontColor: \"#454a58\",\r\n    },\r\n    themeBoxColor: \"#262d43\",\r\n    toggleButton: \"#d13f30\",\r\n    screen: { bgColor: \"#181f32\", font: \"white\" },\r\n    resetButton: {\r\n      fontColor: \"white\",\r\n      bgColor: \"#647299\",\r\n      boxShadow: \"#424e6e\",\r\n    },\r\n    equalButton: {\r\n      fontColor: \"white\",\r\n      bgColor: \"#d13f30\",\r\n      boxShadow: \"#7a2a27\",\r\n    },\r\n  },\r\n\r\n  white: {\r\n    background: { bgColor: \"#e6e6e6\", bgFont: \"#36362e\" },\r\n    buttonPad: {\r\n      bgColor: \"#d3cdcd\",\r\n      buttonColor: \"#e5e4e0\",\r\n      buttonShadow: \"#a89e94\",\r\n      fontColor: \"#3c3c33\",\r\n    },\r\n    themeBoxColor: \"#d5cdcd\",\r\n    toggleButton: \"#c45a06\",\r\n    screen: { bgColor: \"#eeeeee\", font: \"#35352e\" },\r\n    resetButton: {\r\n      fontColor: \"white\",\r\n      bgColor: \"#388187\",\r\n      boxShadow: \"#1c6166\",\r\n    },\r\n    equalButton: {\r\n      fontColor: \"white\",\r\n      bgColor: \"#c85401\",\r\n      boxShadow: \"#863700\",\r\n    },\r\n  },\r\n\r\n  purple: {\r\n    background: { bgColor: \"#17062a\", bgFont: \"#ffe94e\" },\r\n    buttonPad: {\r\n      bgColor: \"#1e0837\",\r\n      buttonColor: \"#331b4d\",\r\n      buttonShadow: \"#7b2391\",\r\n      fontColor: \"#ffe94e\",\r\n    },\r\n    themeBoxColor: \"#1e0837\",\r\n    toggleButton: \"#0be9de\",\r\n    screen: { bgColor: \"#1e0836\", font: \"#ffe94e\" },\r\n    resetButton: {\r\n      fontColor: \"white\",\r\n      bgColor: \"#56077c\",\r\n      boxShadow: \"#a825d7\",\r\n    },\r\n    equalButton: {\r\n      fontColor: \"#15052d\",\r\n      bgColor: \"#0be9de\",\r\n      boxShadow: \"#88ebf0\",\r\n    },\r\n  },\r\n};\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      colorState: \"blue\",\r\n      text: \"\",\r\n    };\r\n    this.colorStateChange = this.colorStateChange.bind(this);\r\n    this.colorChange = this.colorChange.bind(this);\r\n    this.StateUpdate = this.StateUpdate.bind(this);\r\n    this.Stateshow = this.Stateshow.bind(this);\r\n  }\r\n\r\n  /* componentDidUpdate(prevState) {\r\n    if (this.state.colorState !== prevState.colorState) {\r\n    }\r\n  } */\r\n  StateUpdate(e) {\r\n    console.log(\"You are in StateUpdate of Calculator.js\");\r\n    this.setState(() => {\r\n      return { text: e };\r\n    });\r\n  }\r\n\r\n  Stateshow(e) {\r\n    console.log(\"you are in stateshow of calculator.js\");\r\n    console.log(e);\r\n    console.log(typeof e);\r\n    this.setState(() => {\r\n      return { text: e };\r\n    });\r\n  }\r\n\r\n  colorStateChange(e) {\r\n    this.setState(() => {\r\n      return { colorState: e };\r\n    });\r\n    // var colorObj=colorThemes[e];\r\n    this.colorChange(e);\r\n  }\r\n\r\n  colorChange(e) {\r\n    document.body.style.backgroundColor = colorThemes[e].background.bgColor;\r\n    document.body.style.transition = \"all 0.5s\";\r\n  }\r\n\r\n  render() {\r\n    // console.log(this.state.colorState);\r\n    var colorObj = colorThemes[this.state.colorState];\r\n    // console.log(colorObj);\r\n    return (\r\n      <div id=\"background\">\r\n        <Header theme={colorObj} handleCheck={this.colorStateChange} />\r\n        <Screen\r\n          theme={colorObj}\r\n          value={this.state.text}\r\n          stateShow={this.Stateshow}\r\n        />\r\n        <Buttonpad\r\n          theme={colorObj}\r\n          StateUpdate={this.StateUpdate}\r\n          prevValue={this.state.text}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React from \"react\";\r\nimport Calculator from \"./Calculator\";\r\n\r\n/* const theme = {\r\n    theme1 : {\r\n        \"bac\"\r\n    }\r\n} */\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <Calculator />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./My Components/Calculator/App\";\n//import App from './My Components/Drum Machine/Drumpad2';\n//import Drumpad from './My Components/Drum Machine/Drumpad';\n//import marked from \"marked\";\n//import \"./styles.css\";\n//import App from \"./My Components/Markdown-Previewer/App\";\n//import \"./My Components/Markdown-Previewer/index.css\";\n\nReactDOM.render(<App/>, document.getElementById('root'));\n/* Drumpad Starts here\n This Section is about Drumpad \nReactDOM.render(<Drumpad/>,document.getElementById('root'));\n\nDrumpad ends here*/\n\n//ReactDOM.render(<App/>,document.getElementById('root'));\n/* This Section is about QuotesGenerator*/\n//import QuotesGenerator from './My Components/QuotesGenerator';\n//import './index.css';\n\n/* This Section is about QuotesGenerator*/\n/*ReactDOM.render(<div id=\"Quote-card\">\n    <QuotesGenerator/></div>,document.getElementById('root'));*/\n\n/*ReactDOM.render(\n    <App/>,document.getElementById('root'));*/\n\n// Allows line breaks with the return button\n/*marked.setOptions({\n  breaks: true,\n});\n\n// Set a function to be used by the marked Renderer, the bit that takes markdown and translates it to html, and create a callback for links to return the link in a diffrent format then the default.\nconst renderer = new marked.Renderer();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      markdown: placeholder,\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(e) {\n    this.setState({\n      markdown: e.target.value,\n    });\n  }\n  render() {\n    return (\n      <div>\n        <h1 className=\"title\">React Markdown Previewer</h1>\n        <div className=\"AppWrap\">\n          <div className=\"EditorWrap\">\n            <Toolbar text=\"Editor\" />\n            <Editor\n              markdown={this.state.markdown}\n              onChange={this.handleChange}\n            />\n          </div>\n          <div className=\"PreviewerWrap\">\n            <Toolbar text=\"Previewer\" />\n            <Previewer markdown={this.state.markdown} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Toolbar = (props) => {\n  return <div className=\"toolbar\">{props.text}</div>;\n};\n\nconst Editor = (props) => {\n  return (\n    <textarea\n      id=\"editor\"\n      value={props.markdown}\n      onChange={props.onChange}\n      type=\"text\"\n    />\n  );\n};\n\nconst Previewer = (props) => {\n  return (\n    <div\n      id=\"preview\"\n      dangerouslySetInnerHTML={{\n        __html: marked(props.markdown, { renderer: renderer }),\n      }}\n    />\n  );\n};\n\nconst placeholder = `# Welcome to my React Markdown Previewer!\n    \n    ## This is a sub-heading...\n    ### And here's some other cool stuff:\n      \n    Heres some code, \\`<div></div>\\`, between 2 backticks.\n    \n    \\`\\`\\`\n    // this is multi-line code:\n    \n    function anotherExample(firstLine, lastLine) {\n      if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\n        return multiLineCode;\n      }\n    }\n    \\`\\`\\`\n      \n    You can also make text **bold**... whoa!\n    Or _italic_.\n    Or... wait for it... **_both!_**\n    And feel free to go crazy ~~crossing stuff out~~.\n    \n    There's also [links](https://libormarko.github.io/), and\n    > Block Quotes!\n    \n    And if you want to get really crazy, even tables:\n    \n    Wild Header | Crazy Header | Another Header?\n    ------------ | ------------- | ------------- \n    Your content can | be here, and it | can be here....\n    And here. | Okay. | I think we get it.\n    \n    - And of course there are lists.\n      - Some are bulleted.\n         - With different indentation levels.\n            - That look like this.\n    \n    \n    1. And there are numbererd lists too.\n    1. Use just 1s if you want! \n    1. But the list goes on...\n    - Even if you use dashes or asterisks.\n    * And last but not least, let's not forget embedded images:\n    \n    ![React Logo w/ Text](https://goo.gl/Umyytc)\n    `;\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n*/\n"],"sourceRoot":""}